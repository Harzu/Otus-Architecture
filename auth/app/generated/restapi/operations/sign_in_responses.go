// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"otus-auth/app/generated/models"
)

// SignInOKCode is the HTTP code returned for type SignInOK
const SignInOKCode int = 200

/*SignInOK Login success

swagger:response signInOK
*/
type SignInOK struct {
}

// NewSignInOK creates SignInOK with default headers values
func NewSignInOK() *SignInOK {

	return &SignInOK{}
}

// WriteResponse to the client
func (o *SignInOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SignInBadRequestCode is the HTTP code returned for type SignInBadRequest
const SignInBadRequestCode int = 400

/*SignInBadRequest Bad request

swagger:response signInBadRequest
*/
type SignInBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.FailResponse `json:"body,omitempty"`
}

// NewSignInBadRequest creates SignInBadRequest with default headers values
func NewSignInBadRequest() *SignInBadRequest {

	return &SignInBadRequest{}
}

// WithPayload adds the payload to the sign in bad request response
func (o *SignInBadRequest) WithPayload(payload *models.FailResponse) *SignInBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign in bad request response
func (o *SignInBadRequest) SetPayload(payload *models.FailResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignInBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignInInternalServerErrorCode is the HTTP code returned for type SignInInternalServerError
const SignInInternalServerErrorCode int = 500

/*SignInInternalServerError Internal server error

swagger:response signInInternalServerError
*/
type SignInInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.FailResponse `json:"body,omitempty"`
}

// NewSignInInternalServerError creates SignInInternalServerError with default headers values
func NewSignInInternalServerError() *SignInInternalServerError {

	return &SignInInternalServerError{}
}

// WithPayload adds the payload to the sign in internal server error response
func (o *SignInInternalServerError) WithPayload(payload *models.FailResponse) *SignInInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign in internal server error response
func (o *SignInInternalServerError) SetPayload(payload *models.FailResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignInInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
